/* Custom CSS for Productivity Hub - complements Tailwind CSS */

/* Ensure the body and html take up full height for correct centering */
html, body {
    height: 100%;
    margin: 0;
    padding: 0;
}


.quicksand-font {
  font-family: "Quicksand", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

/* Styles for individual task items (managed by JS for dynamic content) */
.task-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.75rem 1rem; /* p-3 in Tailwind */
    border-radius: 0.5rem; /* rounded-md in Tailwind */
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); /* shadow-sm in Tailwind */
    transition: all 0.2s ease-in-out;
}

.task-item:hover {
    background-color: #F3F4F6; /* hover:bg-gray-100 in Tailwind */
}

/* Styles for completed tasks */
.task-item.completed {
    background-color: #D1FAE5; /* bg-green-100 in Tailwind */
    color: #6B7280; /* text-gray-500 in Tailwind */
    text-decoration: line-through;
}

/* Styles for selected task */
.task-item.selected {
    border: 2px solid #3B82F6; /* border-2 border-blue-500 in Tailwind */
}

/* Customize checkbox appearance */
.task-checkbox {
    /* Tailwind provides good defaults for appearance, but you can override here if needed */
    accent-color: #10B981; /* Matches secondary-green */
    cursor: pointer;
}

/* Style for the timer display colors based on phase (overriding Tailwind for dynamic classes) */
#timerDisplay {
    /* Base styles from Tailwind are applied in HTML */
    transition: color 0.3s ease-in-out;
}

/* --- Time Capsule Specific Styles --- */
.time-capsule {
    /* Tailwind classes handle background, padding, shadow, rounded-full, flexbox */
    position: relative;
    /* Aspect ratio or fixed height for capsule shape */
    height: 120px; /* Adjust height as needed for aesthetic */
    width: 90%; /* Adjust width to make it a horizontal capsule */
    max-width: 400px; /* Max width for larger screens */
    margin-left: auto;
    margin-right: auto;
    background: linear-gradient(135deg, var(--tw-colors-capsule-dark-blue) 0%, var(--tw-colors-capsule-light-blue) 100%);
    box-shadow: inset 0 0 15px rgba(0,0,0,0.5), 0 10px 20px rgba(0,0,0,0.3); /* Inner and outer shadow */
}

.capsule-glow {
    /* Inner glow effect for the capsule */
    background: radial-gradient(circle at center, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0) 70%);
    pointer-events: none; /* Allows clicks to pass through to underlying elements */
}

/* Responsive adjustments for the capsule */
@media (min-width: 640px) { /* sm breakpoint */
    .time-capsule {
        height: 140px;
        max-width: 450px;
    }
}

@media (min-width: 768px) { /* md breakpoint */
    .time-capsule {
        height: 160px;
        max-width: 500px;
    }
}

/* Simple box message for alerts (replacing native alert) */
.alert-message {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(59, 130, 246, 0.9); /* primary-blue with transparency */
    color: white;
    padding: 1rem 1.5rem;
    border-radius: 0.75rem; /* rounded-lg */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    font-size: 1rem;
    font-weight: 500;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
}

.alert-message.show {
    opacity: 1;
}

/* Spinner for loading states if ever implemented (e.g. for API calls) */
.spinner {
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-top: 4px solid #fff;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    animation: spin 1s linear infinite;
    display: inline-block;
    vertical-align: middle;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
